{"version":3,"sources":["utils.js","components/GameField/GameField.js","components/Timer/Timer.js","components/ui/Button.js","components/Game/Game.js","components/ScoreTable/ScoreTable.js","components/ui/Input.js","components/ui/Select.js","components/Menu/Menu.js","App.js","index.js"],"names":["randomNumber","min","max","rand","Math","random","round","getFromLocalStorage","key","data","localStorage","getItem","JSON","parse","GameField","color","toString","substring","toUpperCase","size","this","props","level","posX","styles","backgroundColor","height","width","top","left","className","onClick","addClick","style","start","renderSquare","React","Component","Timer","state","pretimer","timer","time","pretimerId","setInterval","clearInterval","toggleRunGame","timerId","setFinish","setState","toFixed","Button","children","Game","clicks","isPlay","isFinish","addScore","changeStatus","option","handleMenuClick","Fragment","difficultyLevel","finish","ScoreTable","scores","map","score","rate","filter","currentLevel","sort","a","b","idx","date","levels","setCurrentLevel","value","mode","renderTableBody","Input","type","onChange","Select","Menu","e","nativeEvent","inputType","target","setTime","setLevel","gameOption","handleInputChange","handleSelectChange","el","i","l","handleSelectLevel","App","isStart","Intl","DateTimeFormat","year","month","day","hour","minute","format","replace","dateFormat","Date","newScore","oldData","newData","setItem","stringify","saveToLocalStorage","t","toggleGameStatus","s","setDifficultyLevel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84f9550d.chunk.js","sourcesContent":["export const dateFormat = (date) => {\r\n    const formatter = new Intl.DateTimeFormat('ru', {\r\n        year: 'numeric',\r\n        month: 'numeric',\r\n        day: 'numeric',\r\n        hour: 'numeric',\r\n        minute: 'numeric',\r\n    })\r\n\r\n    return formatter.format(date).replace(',', '')\r\n}\r\n\r\nexport const randomColor = () => {\r\n    return '#' + (Math.random().toString(16) + '000000').substring(2, 8).toUpperCase()\r\n}\r\n\r\nexport const randomNumber = (min, max) => {\r\n    const rand = min - 0.5 + Math.random() * (max - min + 1)\r\n    return Math.round(rand)\r\n}\r\n\r\nexport const saveToLocalStorage = (key, data) => {\r\n    const oldData = getFromLocalStorage(key)\r\n\r\n    if (oldData) {\r\n        const newData = [...oldData, data]\r\n        localStorage.setItem(key, JSON.stringify(newData))\r\n    } else {\r\n        localStorage.setItem(key, JSON.stringify([data]))\r\n    }\r\n}\r\n\r\nexport const getFromLocalStorage = (key) => {\r\n    const data = localStorage.getItem(key)\r\n    return data ? JSON.parse(data) : null\r\n}\r\n","import React from 'react'\r\nimport { randomColor, randomNumber } from '../../utils'\r\nimport './GameField.css'\r\n\r\nexport class GameField extends React.Component {\r\n    renderSquare() {\r\n        const color = randomColor()\r\n        let size = randomNumber(60, 100)\r\n\r\n        if (this.props.level === 2) size = size * 0.7\r\n        if (this.props.level === 3) size = size * 0.55\r\n\r\n        const posX = randomNumber(1, 500 - size)\r\n        const posY = randomNumber(1, 500 - size)\r\n\r\n        const styles = {\r\n            backgroundColor: color,\r\n            height: size,\r\n            width: size,\r\n            top: posY,\r\n            left: posX,\r\n        }\r\n\r\n        return <div className='square' onClick={this.props.addClick} style={styles}></div>\r\n    }\r\n\r\n    render() {\r\n        return <div className='gameField'>{this.props.start && this.renderSquare()}</div>\r\n    }\r\n}\r\n\r\nexport default GameField\r\n","import React from 'react'\r\nimport './Timer.css'\r\n\r\nexport class Timer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            pretimer: 3,\r\n            timer: props.time,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const pretimerId = setInterval(() => {\r\n            if (this.state.pretimer === 0) {\r\n                clearInterval(pretimerId)\r\n\r\n                this.props.toggleRunGame()\r\n\r\n                const timerId = setInterval(() => {\r\n                    if (this.state.timer === '0.0') {\r\n                        clearInterval(timerId)\r\n\r\n                        this.props.toggleRunGame()\r\n                        this.props.setFinish()\r\n                    } else {\r\n                        this.setState({ timer: (this.state.timer - 0.1).toFixed(1) })\r\n                    }\r\n                }, 100)\r\n            } else {\r\n                this.setState({ pretimer: this.state.pretimer - 1 })\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='timer'>\r\n                {this.state.pretimer !== 0\r\n                    ? `старт через ${this.state.pretimer}`\r\n                    : this.state.timer}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timer\r\n","import React from 'react'\r\nimport './Button.css'\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button className={`button ${props.className}`} onClick={props.onClick}>\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport GameField from '../GameField/GameField'\r\nimport Timer from '../Timer/Timer'\r\nimport Button from '../ui/Button'\r\nimport './Game.css'\r\n\r\nclass Game extends React.Component {\r\n    state = {\r\n        clicks: 0,\r\n        isPlay: false,\r\n        isFinish: false,\r\n    }\r\n\r\n    addClick() {\r\n        this.setState({ clicks: this.state.clicks + 1 })\r\n    }\r\n\r\n    toggleRunGame() {\r\n        this.setState({ isPlay: !this.state.isPlay })\r\n    }\r\n\r\n    setFinish() {\r\n        this.setState({ isFinish: true })\r\n    }\r\n\r\n    handleMenuClick() {\r\n        this.props.addScore(this.state.clicks)\r\n        this.props.changeStatus()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='game'>\r\n                {!this.state.isFinish ? (\r\n                    <React.Fragment>\r\n                        <Timer\r\n                            time={this.props.option.time}\r\n                            toggleRunGame={() => this.toggleRunGame()}\r\n                            setFinish={() => this.setFinish()}\r\n                        />\r\n                        <GameField\r\n                            level={this.props.option.difficultyLevel}\r\n                            finish={this.state.isFinish}\r\n                            start={this.state.isPlay}\r\n                            addClick={() => this.addClick()}\r\n                        />\r\n                    </React.Fragment>\r\n                ) : (\r\n                    <div className='stats'>\r\n                        <div>время: {this.props.option.time}c.</div>\r\n                        <div>количество кликов: {this.state.clicks}</div>\r\n                        <div>\r\n                            кликов в секунду:{' '}\r\n                            {(this.state.clicks / this.props.option.time).toFixed(2)}\r\n                        </div>\r\n                        <Button className='btn' onClick={() => this.handleMenuClick()}>\r\n                            меню\r\n                        </Button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game\r\n","import React from 'react'\r\nimport './ScoreTable.css'\r\n\r\nclass ScoreTable extends React.Component {\r\n    renderTableBody() {\r\n        const scores = this.props.scores.map((score) => ({\r\n            ...score,\r\n            rate: (score.clicks / score.time).toFixed(2),\r\n        }))\r\n\r\n        const filteredCurrentLevel = scores.filter(\r\n            (score) => score.difficultyLevel === this.props.currentLevel\r\n        )\r\n\r\n        const sortedScores = filteredCurrentLevel.sort((a, b) => b.rate - a.rate)\r\n\r\n        return sortedScores.map((score, idx) => (\r\n            <React.Fragment key={idx}>\r\n                <div className='item'>{idx + 1}</div>\r\n                <div className='item'>{score.rate}</div>\r\n                <div className='item'>{score.date}</div>\r\n                <div className='item'>{score.time}</div>\r\n                <div className='item'>{score.clicks}</div>\r\n            </React.Fragment>\r\n        ))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='scoreTableWrap'>\r\n                <div className='selectLevels'>\r\n                    {this.props.levels.map((level, idx) => (\r\n                        <div\r\n                            key={idx}\r\n                            onClick={() => this.props.setCurrentLevel(level.value)}\r\n                            className={`selectLevel ${\r\n                                this.props.currentLevel === level.value ? 'active' : ''\r\n                            }`}>\r\n                            {level.mode} сл.\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className='scoreTable'>\r\n                    <div className='scoreTableHead grid'>\r\n                        <div>№</div>\r\n                        <div>клик./сек.</div>\r\n                        <div>дата</div>\r\n                        <div>секунды</div>\r\n                        <div>клики</div>\r\n                    </div>\r\n                    <div className='scoreTableBody grid'>{this.renderTableBody()}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ScoreTable\r\n","import React from 'react'\r\nimport './Input.css'\r\n\r\nconst Input = (props) => {\r\n    return (\r\n        <input\r\n            className='input'\r\n            type='number'\r\n            min={props.min}\r\n            max={props.max}\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport './Select.css'\r\n\r\nconst Select = (props) => {\r\n    return (\r\n        <select className='select' onChange={props.onChange} value={props.value}>\r\n            {props.children}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default Select\r\n","import React from 'react'\r\nimport ScoreTable from '../ScoreTable/ScoreTable'\r\nimport Button from '../ui/Button'\r\nimport Input from '../ui/Input'\r\nimport Select from '../ui/Select'\r\nimport './Menu.css'\r\n\r\nclass Menu extends React.Component {\r\n    state = {\r\n        currentLevel: 1,\r\n    }\r\n\r\n    handleInputChange(e) {\r\n        if (!e.nativeEvent.inputType) {\r\n            const time = +e.target.value\r\n            this.props.setTime(time)\r\n        }\r\n    }\r\n\r\n    handleSelectChange(e) {\r\n        const value = +e.target.value\r\n        this.props.setLevel(value)\r\n    }\r\n\r\n    handleSelectLevel(level) {\r\n        this.setState({ currentLevel: level })\r\n    }\r\n\r\n    render() {\r\n        const levels = [\r\n            { value: 1, mode: 'низкая' },\r\n            { value: 2, mode: 'средняя' },\r\n            { value: 3, mode: 'высокая' },\r\n        ]\r\n\r\n        return (\r\n            <div className='menu'>\r\n                <div className='option'>\r\n                    <div className='time'>\r\n                        время{' '}\r\n                        <Input\r\n                            value={this.props.gameOption.time}\r\n                            min='10'\r\n                            max='60'\r\n                            onChange={(e) => this.handleInputChange(e)}\r\n                        />\r\n                    </div>\r\n                    <div className='gameMode'>\r\n                        сложность{' '}\r\n                        <Select\r\n                            value={this.props.gameOption.difficultyLevel}\r\n                            onChange={(e) => this.handleSelectChange(e)}>\r\n                            {levels.map((el, i) => (\r\n                                <option key={i} value={el.value}>\r\n                                    {el.mode}\r\n                                </option>\r\n                            ))}\r\n                        </Select>\r\n                    </div>\r\n                    <div className='br'></div>\r\n                    <Button onClick={this.props.changeStatus}>играть</Button>\r\n                </div>\r\n                <div className='scores'>\r\n                    таблица рекордов\r\n                    <div className='br'></div>\r\n                    <ScoreTable\r\n                        scores={this.props.scores}\r\n                        levels={levels}\r\n                        currentLevel={this.state.currentLevel}\r\n                        setCurrentLevel={(l) => this.handleSelectLevel(l)}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\nimport './App.css'\nimport Game from './components/Game/Game'\nimport Menu from './components/Menu/Menu'\nimport { dateFormat, getFromLocalStorage, saveToLocalStorage } from './utils'\n\nclass App extends React.Component {\n    state = {\n        scores: getFromLocalStorage('scores') || [],\n        isStart: false,\n        gameOption: {\n            time: 10,\n            difficultyLevel: 2,\n        },\n    }\n\n    addScore(clicks) {\n        const date = dateFormat(new Date())\n        const newScore = {\n            time: this.state.gameOption.time,\n            difficultyLevel: this.state.gameOption.difficultyLevel,\n            clicks,\n            date,\n        }\n\n        this.setState({\n            scores: [...this.state.scores, newScore],\n        })\n\n        saveToLocalStorage('scores', newScore)\n    }\n\n    setTime(time) {\n        let t = time < 10 ? 10 : time > 60 ? 60 : time\n\n        this.setState({\n            gameOption: {\n                ...this.state.gameOption,\n                time: t,\n            },\n        })\n    }\n\n    toggleGameStatus() {\n        this.setState({ isStart: !this.state.isStart })\n    }\n\n    setDifficultyLevel(level) {\n        this.setState({\n            gameOption: {\n                ...this.state.gameOption,\n                difficultyLevel: level,\n            },\n        })\n    }\n\n    render() {\n        return (\n            <div className='app'>\n                {this.state.isStart ? (\n                    <Game\n                        option={this.state.gameOption}\n                        changeStatus={() => this.toggleGameStatus()}\n                        addScore={(s) => this.addScore(s)}\n                    />\n                ) : (\n                    <Menu\n                        gameOption={this.state.gameOption}\n                        setTime={(t) => this.setTime(t)}\n                        setLevel={(l) => this.setDifficultyLevel(l)}\n                        changeStatus={() => this.toggleGameStatus()}\n                        scores={this.state.scores}\n                    />\n                )}\n            </div>\n        )\n    }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}